{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Velocity University","text":"<p>This website houses documentation for the Velocity system. It is primarily intended to aid business stakeholders in understanding how the various features of Velocity function at a high level.</p> <p>See something that needs updated or corrected? Please send any questions and/or requests to the z-VelocityTechWriters@nelnet.net or create a ticket in our backlog.</p> <p>Have questions on the Documentation Process? Learn more about the Velocity Technical Writing Team!</p>"},{"location":"Things%20we%20can%20do%20with%20MkDocs%20Material/admonitions/","title":"Admonitions","text":"<p>Example of an admonition/callout with a title:</p> <p>Title of the callout</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Collapsible callout:</p> Collapsible callout <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Collapsible callout <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"Things%20we%20can%20do%20with%20MkDocs%20Material/code-examples/","title":"Code examples","text":"<p>An example of a codeblock for Python:</p> add_numbers.py<pre><code># Function to add two numbers\ndef add_two_numbers(num1, num2):\n    return num1 + num2\n\n# Example usage\nresult = add_two_numbers(5, 3)\nprint('The sum is:', result)\n</code></pre> <p>Example codeblock for JavaScript with lines highlighted:</p> concatenate_strings.js<pre><code>// Function to concatenate two strings\nfunction concatenateStrings(str1, str2) {\n  return str1 + str2;\n}\n\n// Example usage\nconst result = concatenateStrings(\"Hello, \", \"World!\");\nconsole.log(\"The concatenated string is:\", result);\n</code></pre>"},{"location":"Things%20we%20can%20do%20with%20MkDocs%20Material/content-tabs/","title":"Content tabs","text":""},{"location":"Things%20we%20can%20do%20with%20MkDocs%20Material/content-tabs/#content-tabs","title":"Content Tabs","text":"<p>This is some examples of content tabs.</p>"},{"location":"Things%20we%20can%20do%20with%20MkDocs%20Material/content-tabs/#generic-content","title":"Generic Content","text":"Plain textUnordered listOrdered list <p>This is some plain text</p> <ul> <li>First item</li> <li>Second item</li> <li>Third item</li> </ul> <ol> <li>First item</li> <li>Second item</li> <li>Third item</li> </ol>"},{"location":"Things%20we%20can%20do%20with%20MkDocs%20Material/content-tabs/#code-blocks-in-content-tabs","title":"Code Blocks in Content Tabs","text":"PythonJavaScript <pre><code>def main():\n    print(\"Hello world!\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <pre><code>function main() {\n    console.log(\"Hello world!\");\n}\n\nmain();\n</code></pre>"},{"location":"Things%20we%20can%20do%20with%20MkDocs%20Material/diagram-examples/","title":"Diagram Examples","text":""},{"location":"Things%20we%20can%20do%20with%20MkDocs%20Material/diagram-examples/#flowcharts","title":"Flowcharts","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Failure?};\n  B --&gt;|Yes| C[Investigate...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Success!];</code></pre>"},{"location":"Things%20we%20can%20do%20with%20MkDocs%20Material/diagram-examples/#sequence-diagrams","title":"Sequence Diagrams","text":"<pre><code>sequenceDiagram\n  autonumber\n  Server-&gt;&gt;Terminal: Send request\n  loop Health\n      Terminal-&gt;&gt;Terminal: Check for health\n  end\n  Note right of Terminal: System online\n  Terminal--&gt;&gt;Server: Everything is OK\n  Terminal-&gt;&gt;Database: Request customer data\n  Database--&gt;&gt;Terminal: Customer data</code></pre>"},{"location":"Velocity%20Servicing%20Features/Data%20Availability%20%26%20Management/Availability%20via%20Snowflake/","title":"Availability via Snowflake","text":""},{"location":"Velocity%20Servicing%20Features/Data%20Availability%20%26%20Management/Availability%20via%20Snowflake/#overview","title":"Overview","text":"<p>Snowflake is a cloud-based data warehouse that pulls in data from the various Velocity microservice databases. The Data Availability Team (DAT) uses a software called DBT as a tool to create different \"views\" within Snowflake. Each view in Snowflake is a SQL query that has been structured by the DAT to display various data elements in specific ways that are helpful for users when analyzing data.</p> <p>Currently, views within Snowflake display data from the DBT_VELOCITY_DB database; however, there are other databases that exist outside of Velocity that are maintained by other teams (such as Analytics, Ops Analysts, etc.). There are different types of Snowflake views and each type has associated characteristics, including how often the underlying tables are refreshed with new data.</p> <p>The Data Dictionary is a comprehensive database of the various data elements that live in Velocity and Snowflake with a description of each data element. Currently, the Data Dictionary exists as an Excel spreadsheet, but efforts are being made to move the Data Dictionary onto the DBT platform for various quality of life reasons, including being able to access the Data Dictionary within Snowflake.</p>"},{"location":"Velocity%20Servicing%20Features/Data%20Availability%20%26%20Management/Availability%20via%20Snowflake/#what-is-snowflake","title":"What is Snowflake?","text":"<p>Snowflake is a cloud-based data warehouse that imports data from a collection of databases that exist in PostgreSQL (Postgres) using AWS Glue and a new tool called Rivery. The Velocity platform is comprised of various microservices that all communicate using various APIs and each microservice contains a collection of tables (or small databases). Velocity has approximately 60 different microservices and corresponding databases in Postgres, which Snowflake can pull from to query different data and then present different data based on the queries.</p> <p>Additionally, Snowflake currently serves as a data warehouse for entities other than just Velocity, meaning it contains a lot of other data that is not maintained specifically by the DAT. If users wish to find data or information about the other areas and tables within Snowflake, they will need to contact the owner of the specific space.</p> <p>Data Storage History</p> <p>Velocity launched with Access Loans in 2019 and Snowflake became the preferred data warehouse for Velocity in 2021. Due to this timeline, there is approximately 1.5 years worth of data that exists in Velocity that does not exist in Snowflake at this time. There is an old RDS environment (Redshift Postgres) that acted as a temporary solution prior to adopting Snowflake that is still active and houses this older data as well.</p> <p>The earliest records in Snowflake have a timestamp of around March of 2021.</p>"},{"location":"Velocity%20Servicing%20Features/Data%20Availability%20%26%20Management/Availability%20via%20Snowflake/#what-is-dbt","title":"What is DBT?","text":"<p>DBT is the software that the Data Availability Team uses as a development environment. Each view that is created by the DAT, and then used by Nelnet users in Snowflake, is developed in DBT. DBT interfaces with Github, allowing the team to use all of the quality of life features that Github has to offer.</p> <p>DBT also acts as a data transformation tool, allowing users to take source data and model it in ways that materialize different views and tables. So, while the DAT uses it primarily for creating and developing different views, its functionality goes beyond simply creating different views.</p> <p>Additionally, DBT serves as the central location for all of the Data Availability Team's column-level documentation. This documentation is currently being added as the DAT touches each column and/or works on new tickets and projects.</p> <p>To learn more about DBT, you can visit the DBT website.</p>"},{"location":"Velocity%20Servicing%20Features/Data%20Availability%20%26%20Management/Availability%20via%20Snowflake/#what-is-the-data-dictionary","title":"What is the Data Dictionary?","text":"<p>The Data Dictionary is a project with the primary goal of providing helpful descriptions for all of the various data elements that exist within Velocity today. For example, if a user were to query one of the Velocity APIs and was returned a JSON payload full of data, the Data Dictionary could be used to look up the different data element names and their descriptions.</p> <p>While the Data Dictionary currently exists in Excel spreadsheets, there are efforts underway to move the existing data element descriptions into a DBT repository. Doing this would centralize the Data Dictionary for all users, allow data element descriptions to be updated in a live database, allow Snowflake users to access the Data Dictionary within Snowflake, and allow DBT users to see the relationships between data elements and the different views they are used in (otherwise known as their lineage).</p>"},{"location":"Velocity%20Servicing%20Features/Data%20Availability%20%26%20Management/Availability%20via%20Snowflake/#snowflake-views-and-table-refresh-times","title":"Snowflake Views and Table Refresh Times","text":"<p>Info</p> <p>The views in Snowflake are non-materialized, meaning each view will re-run the SQL query that generates it and display the current data when called.Creating Snowflake views is necessary because people need to see the various pieces of data without having access to the actual tables where the data is housed.</p> View / Type Name Scheduled Table Refresh Times Description (VW) View Financial data updates as new data comes in from Velocity.Non-financial data updates during the scheduled table refresh times.Starts: 5:00a UTC / 11:00p CSTEnds: 11:20a UTC / 5:20a CST Views that have \"VW\" in their name represent queries that are pulling data in near real-time. The data in these views are updated as the data in Velocity changes.Non-financial related data changes (ie. address changes, phone number changes, e-correspondence/SCRA status changes, etc.) do not update automatically when changes to those pieces of data are made in Velocity. Changes to these pieces of information will only update in the Snowflake views during the refresh cycle each morning. (DS) Daily snapshot Starts: 5:00a UTC / 11:00p CSTEnds: 11:20a UTC / 5:20a CST Views that have \"DS\" in their name represent queries that are snapshotting data elements at a scheduled time, meaning the information is going to be accurate as of the time it was last queried. These views are built from AWS Glue (and Rivery) tables brought over nightly. (RP) Reports Starts: 5:00a UTC / 11:00p CSTEnds: 11:20a UTC / 5:20a CST Views that have \"RP\" in their name are reporting views based off of \"VW\" and \"DS\" views. (CRP) Citizens reports Starts: 5:00a UTC / 11:00p CSTEnds: 11:20a UTC / 5:20a CST Views that have \"CRP\" in their name are the same as \"RP\" views, but are specific to Citizens."},{"location":"Velocity%20Servicing%20Features/Loan%20Management/Loan%20Modifications/","title":"Loan Modifications","text":""},{"location":"Velocity%20Servicing%20Features/Loan%20Management/Loan%20Modifications/#overview","title":"Overview","text":"<p>Lenders of loans serviced on Nelnet Velocity may offer some type of loan modifications in their Loan Program to assist customers who are having difficulty making payments.</p> <p>Qualification requirements vary by lender and loan program.</p> <p>Processors have the ability to edit certain loan modifications directly in the Agent Portal, such as Repayment Term Extensions. This includes both applying a new Repayment Term Extension as well as editing an existing one. The length of the extension can also be viewed in the Agent Portal.</p> <p>Processors can add and/or update customer applications in the Application Status tab in the Account Activity card of the Agent Portal.</p> <p>Customers can view the status of any applications Nelnet has received when they log into the customer portal. This includes, but is not limited to, the status of any deferment, forbearance, loan modification, or fraud applications. These statuses also display whether the borrower has an application pending for (or is repaying under) an alternative repayment plan, listing the plan chosen; and whether the borrower has an application pending for any loan forgiveness benefit. Applications for items such as Death Request, Fraud/ID Theft Request, and Qualified Requests will not display to the customer.</p>"},{"location":"Velocity%20Servicing%20Features/Loan%20Management/Loan%20Modifications/#business-logic","title":"Business logic","text":"<p>The goal of a loan modification is to provide the borrower with more favorable terms that better align with their current financial situation, making it easier for them to repay the loan.</p>"},{"location":"Velocity%20Servicing%20Features/Loan%20Management/Loan%20Modifications/#workflow","title":"Workflow","text":"<p>Velocity completes the following steps based on the loan modification settings when adding a loan modification:</p> <ol> <li>Functions performed to the loan when the corresponding options are configured for a Loan Modification setting:</li> <li>Mark the loan modification status as Processing.</li> <li>Process interest rate reduction if required, using either a flat rate or percentage reduction:<ul> <li>Flat rate - specifies the exact interest rate</li> <li>Percentage - specifies the percentage reduction (for example, .025 percent reduction)</li> </ul> </li> <li>Payment amount reduction if required, using one of the options listed:<ul> <li>Dollar - a specific dollar amount reduction (for example, reduce the payment by $10)</li> <li>Percentage - a specific percentage reduction (for example, reduce the payment by 10%)</li> <li>Fixed payment - sets payments to a specific dollar amount (for example, the payment will be $100)</li> </ul> </li> <li>Bring the loan current</li> <li>Snapshot</li> <li>Replay - if effectiveDate was in the past</li> <li>Capitalize interest.</li> <li>Reamortize the loan.</li> <li>If applicable to the loan mod:<ul> <li>An activity note is created<ul> <li>Type - Event</li> <li>Activity - Loan Term Modified (example)</li> <li>Details (example)<ul> <li>Extend: Term modification applied. Maturity date updated from ${beforeMaturityDate} to ${afterMaturityDate}. Term extended by ${count}. Remaining Term updated from ${beforeRemainingTerm} to ${afterRemainingTerm}. for all 3 scenarios: Add, Edit, and Remove.</li> <li>Reduce: Term modification applied. Maturity date updated from ${beforeMaturityDate} to ${afterMaturityDate}. Term reduced by ${count}. Remaining Term updated from ${beforeRemainingTerm} to ${afterRemainingTerm}. for all 3 scenarios: Add, Edit, and Remove.</li> </ul> </li> </ul> </li> <li>Created By - User token</li> </ul> </li> <li>Mark steps as Completed.</li> <li>Mark loan mod status as Active.</li> </ol>"},{"location":"Velocity%20Servicing%20Features/Loan%20Management/Loan%20Modifications/#examples","title":"Examples","text":"<p>Interest Rate Reduction: The lender may agree to lower the interest rate on the loan, which can help reduce the borrower's monthly payments and overall interest costs.</p> <p>Loan Term Extension: The lender may extend the repayment term of the loan, spreading out the remaining balance over a longer period. This can lower the monthly payments but may result in paying more interest over the life of the loan.</p> <p>Principal Forbearance: In certain cases, the lender may agree to temporarily reduce or suspend a portion of the principal balance owed. This provides immediate relief to the borrower by reducing the monthly payment amount, but the deferred amount will typically need to be repaid later.</p> <p>Payment Deferral: The lender may allow the borrower to skip a certain number of monthly payments and add them to the end of the loan term, effectively extending the repayment period without incurring penalties.</p>"},{"location":"Velocity%20Servicing%20Features/Loan%20Management/Loan%20Modifications/#processing","title":"Processing","text":"<p>See Workflow.</p>"},{"location":"Velocity%20Servicing%20Features/Loan%20Management/Loan%20Modifications/#lender-configuration","title":"Lender configuration","text":"<p>Lenders determine which loan modifications to offer in their loan programs. Loan modifications are configured on the System Configuration Portal.</p> <p>Current options include:</p> <ul> <li>interest rate reduction</li> <li>payment amount reduction</li> <li>term extension</li> </ul> <p>These can be permanent or temporary. The lender can also choose to bring the loan current or backdate the changes when adding the loan modification and to capitalize interest or re-amortize at the end of the loan modification.</p> <p>Examples include:</p> <ul> <li>Loan payment may change by a certain amount</li> <li>Customer\u2019s past due status</li> <li>Customer\u2019s on-time payment record</li> <li>Customer having a set payment amount or flexible payment by loan</li> </ul> <p>In the System Configuration Portal, the Lender defines the settings for each of the Loan Modifications.</p>"}]}